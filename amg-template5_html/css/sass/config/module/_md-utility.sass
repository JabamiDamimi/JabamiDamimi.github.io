@charset "utf-8"

// Utility Element

// style
@mixin u-style()
    .u-style
        &-none
            margin: 0
            padding: 0
            list-style: none

// scroll
@mixin u-scroll()
    .u-scroll
        &-no
            overflow: hidden
        &-x
            overflow-y: hidden
            -webkit-overflow-scrolling: touch
        &-y
            overflow-x: hidden
            -webkit-overflow-scrolling: touch

// display
@mixin display-attributes()
    &-none
        display: none
    &-inline
        display: inline
    &-inline-block
        display: inline-block
    &-block
        display: block
    &-table 
        display: table
    &-table-row
        display: table-row
    &-table-cell
        display: table-cell
    &-flex
        display: -ms-flexbox
        display: flex
    &-inline-flex
        display: -ms-inline-flexbox
        display: inline-flex

@mixin u-display()
    .u
        &-dp
            +display-attributes()
            @each $size, $switch in $displaySwitch
                @if $switch == t
                    +rwdw-min($size)
                        &-#{$size}
                            +display-attributes()
        
        &-show
            display: initial
        &-hide
            display: none !important

    .u-show, .u-display, .u-dp
        +rwdw-max()
            &-pc
                display: none !important
        +rwdw-min()
            &-mobile
                display: none !important
        @each $size, $switch in $displaySwitch
            @if $switch == t
                +rwdw-max($size)
                    &-#{$size}-pc
                        display: none !important
                +rwdw-min($size)
                    &-#{$size}-mobile
                        display: none !important

// flex
@mixin flex-attributes()
    &-row
        flex-direction: row
        &-reverse
            flex-direction: row-reverse
    &-column
        flex-direction: column
        &-reverse
            flex-direction: column-reverse
    &-wrap
        flex-wrap: wrap
        &-reverse
            flex-wrap: wrap-reverse
    &-nowrap
        flex-wrap: nowrap

    &-fill
        flex: 1 1 auto

    &-grow
        &-0
            flex-grow: 0
        &-1
            flex-grow: 1
    &-shrink
        &-0
            flex-shrink: 0
        &-1
            flex-shrink: 1
@mixin justify-content-attributes()
    &-start
        justify-content: flex-start
    &-end
        justify-content: flex-end
    &-center
        justify-content: center
    &-between
        justify-content: space-between
    &-around
        justify-content: space-around
@mixin align-items()
    &-start
        align-items: flex-start
    &-end
        align-items: flex-end
    &-center
        align-items: center
    &-baseline
        align-items: baseline
    &-stretch
        align-items: stretch
@mixin align-content()
    &-start
        align-content: flex-start
    &-end
        align-content: flex-end
    &-center
        align-content: center
    &-between
        align-content: space-between
    &-around
        align-content: space-around
    &-stretch
        align-content: stretch
@mixin align-self()
    &-auto
        align-self: auto
    &-start
        align-self: flex-start
    &-end
        align-self: flex-end
    &-center
        align-self: center
    &-baseline
        align-self: baseline
    &-stretch
        align-self: stretch
@mixin u-flex()
    .u
        &-fl
            +flex-attributes()
        &-jc
            +justify-content-attributes()
        &-a
            &i
                +align-items()
            &c
                +align-content()
            &s
                +align-self()
        @each $size, $switch in $flexSwitch
            @if $switch == t
                +rwdw-min($size)
                    &-fl-#{$size}
                        +flex-attributes()
                    &-jc-#{$size}
                        +justify-content-attributes()
                    &-a
                        &i-#{$size}
                                +align-items()
                        &c-#{$size}
                                +align-content()
                        &s-#{$size}
                            +align-self()

@mixin u-ff()
    /* font-family */ 
    .u-ff
        &-default, &-clear, &-main
            font-family: $fontDefault
        @each $ffName, $ffVal in $font
            &-#{$ffName}
                font-family: map-get($font, $ffName), $fontDefault

@mixin u-fs()
    /* font size */
    .u-fs
        @each $var in $fsArray
            &-#{$var}
                font-size: rem($var)
        @each $switchName, $switchVal in $FontSwitch
            @if $switchVal == t
                @if $switchName != base
                    +rwdw-min($switchName)
                        @each $var in $fsArray
                            &-#{$switchName}-#{$var}
                                font-size: rem($var)

@mixin u-fw()
    /* font-weight */
    $FontWeight: 100, 200, 300, 400, 500, 600, 700, 800, 900, bold
    .u-fw
        @each $val in $FontWeight
            &-#{$val}
                font-weight: $val
        &-clear
            font-weight: normal
        @each $switchName, $switchVal in $FontSwitch
            @if $switchVal == t  
                @if $switchName != base
                    +rwdw-min($switchName)
                        @each $val in $FontWeight
                            &-#{$switchName}-#{$val}
                                font-weight: $val
@mixin u-ta()
    /* text-align */
    $TextAlign: left, center, right, justify
    .u-ta
        @each $val in $TextAlign
            &-#{$val}
                text-align: $val
        @each $switchName, $switchVal in $FontSwitch
            @if $switchVal == t  
                @if $switchName != base
                    +rwdw-min($switchName)
                        @each $val in $TextAlign
                            &-#{$switchName}-#{$val}
                                font-weight: $val
@mixin u-fc()
    /* font color */ 
    .u-fc
        @each $fcName, $fcVal in $color
            &-#{$fcName}
                color: map-get($color, $fcName)
@mixin u-bgc()
    /* background color */
    .u-bgc
        @each $bgcName, $bgcVal in $backgroundColor
            &-#{$bgcName}
                background: map-get($backgroundColor, $bgcName)

@mixin u-ls()
    /* letter-spacing */
    .u-ls
        @each $name, $var in $lsArray
            &-#{$name}
                letter-spacing: $var + px
        @each $switchName, $switchVal in $FontSwitch
            @if $switchVal == t
                @if $switchName != base
                    +rwdw-min($switchName)
                        @each $name, $var in $lsArray
                            &-#{$switchName}-#{$name}
                                letter-spacing: $var + px

@mixin u-lh()
    /* line-height */
    .u-lh
        @each $name, $var in $lhArray
            &-#{$name}
                line-height: $var
        @each $switchName, $switchVal in $FontSwitch
            @if $switchVal == t
                @if $switchName != base
                    +rwdw-min($switchName)
                        @each $name, $var in $lhArray
                            &-#{$switchName}-#{$name}
                                line-height: $var


@mixin u-margin()
    .u-m
        @if $mgDetail == t
            @each $val in map-get($mgArray, l)
                &l-#{$val}
                    margin-left: unit($val, $mgUnit)
            @each $val in map-get($mgArray, r)
                &r-#{$val}
                    margin-right: unit($val, $mgUnit)
            @each $val in map-get($mgArray, t)
                &t-#{$val}
                    margin-top: unit($val, $mgUnit)
            @each $val in map-get($mgArray, b)
                &b-#{$val}
                    margin-bottom: unit($val, $mgUnit)
            @each $val in map-get($mgArray, x)
                &x-#{$val}
                    margin-left: unit($val, $mgUnit)
                    margin-right: unit($val, $mgUnit)
            @each $val in map-get($mgArray, y)
                &y-#{$val}
                    margin-top: unit($val, $mgUnit)
                    margin-bottom: unit($val, $mgUnit)
            @each $val in map-get($mgArray, all)
                &-#{$val}
                    margin: unit($val, $mgUnit)
                
            @each $size, $val in $mgSwitch
                @if $val == t
                    +rwdw-min($size)
                        @each $val in map-get($mgArray, l)
                            &l-#{$size}-#{$val}
                                margin-left: unit($val, $mgUnit)
                        @each $val in map-get($mgArray, r)
                            &r-#{$size}-#{$val}
                                margin-right: unit($val, $mgUnit)
                        @each $val in map-get($mgArray, t)
                            &t-#{$size}-#{$val}
                                margin-top: unit($val, $mgUnit)
                        @each $val in map-get($mgArray, b)
                            &b-#{$size}-#{$val}
                                margin-bottom: unit($val, $mgUnit)
                        @each $val in map-get($mgArray, x)
                            &x-#{$size}-#{$val}
                                margin-left: unit($val, $mgUnit)
                                margin-right: unit($val, $mgUnit)
                        @each $val in map-get($mgArray, y)
                            &y-#{$size}-#{$val}
                                margin-top: unit($val, $mgUnit)
                                margin-bottom: unit($val, $mgUnit)
                        @each $val in map-get($mgArray, all)
                            &-#{$size}-#{$val}
                                margin: unit($val, $mgUnit)
        @else 
            @each $val in $mgArray
                &l-#{$val}
                    margin-left: unit($val, $mgUnit)
                &r-#{$val}
                    margin-right: unit($val, $mgUnit)
                &t-#{$val}
                    margin-top: unit($val, $mgUnit)
                &b-#{$val}
                    margin-bottom: unit($val, $mgUnit)
                &x-#{$val}
                    margin-left: unit($val, $mgUnit)
                    margin-right: unit($val, $mgUnit)
                &y-#{$val}
                    margin-top: unit($val, $mgUnit)
                    margin-bottom: unit($val, $mgUnit)
                &-#{$val}
                    margin: unit($val, $mgUnit)

            @each $size, $val in $mgSwitch
                @if $val == t
                    +rwdw-min($size)
                        @each $val in $mgArray
                            &l-#{$size}-#{$val}
                                margin-left: unit($val, $mgUnit)
                            &r-#{$size}-#{$val}
                                margin-right: unit($val, $mgUnit)
                            &t-#{$size}-#{$val}
                                margin-top: unit($val, $mgUnit)
                            &b-#{$size}-#{$val}
                                margin-bottom: unit($val, $mgUnit)
                            &x-#{$size}-#{$val}
                                margin-left: unit($val, $mgUnit)
                                margin-right: unit($val, $mgUnit)
                            &y-#{$size}-#{$val}
                                margin-top: unit($val, $mgUnit)
                                margin-bottom: unit($val, $mgUnit)
                            &-#{$size}-#{$val}
                                margin: unit($val, $mgUnit)
                            
@mixin u-padding()
    .u-p
        @if $pdDetail == t
            @each $val in map-get($pdArray, l)
                &l-#{$val}
                    padding-left: unit($val, $pdUnit)
            @each $val in map-get($pdArray, r)
                &r-#{$val}
                    padding-right: unit($val, $pdUnit)
            @each $val in map-get($pdArray, t)
                &t-#{$val}
                    padding-top: unit($val, $pdUnit)
            @each $val in map-get($pdArray, b)
                &b-#{$val}
                    padding-bottom: unit($val, $pdUnit)
            @each $val in map-get($pdArray, x)
                &x-#{$val}
                    padding-left: unit($val, $pdUnit)
                    padding-right: unit($val, $pdUnit)
            @each $val in map-get($pdArray, y)
                &y-#{$val}
                    padding-top: unit($val, $pdUnit)
                    padding-bottom: unit($val, $pdUnit)
            @each $val in map-get($pdArray, all)
                &-#{$val}
                    padding: unit($val, $pdUnit)
                
            @each $size, $val in $pdSwitch
                @if $val == t
                    +rwdw-min($size)
                        @each $val in map-get($pdArray, l)
                            &l-#{$size}-#{$val}
                                padding-left: unit($val, $pdUnit)
                        @each $val in map-get($pdArray, r)
                            &r-#{$size}-#{$val}
                                padding-right: unit($val, $pdUnit)
                        @each $val in map-get($pdArray, t)
                            &t-#{$size}-#{$val}
                                padding-top: unit($val, $pdUnit)
                        @each $val in map-get($pdArray, b)
                            &b-#{$size}-#{$val}
                                padding-bottom: unit($val, $pdUnit)
                        @each $val in map-get($pdArray, x)
                            &x-#{$size}-#{$val}
                                padding-left: unit($val, $pdUnit)
                                padding-right: unit($val, $pdUnit)
                        @each $val in map-get($pdArray, y)
                            &y-#{$size}-#{$val}
                                padding-top: unit($val, $pdUnit)
                                padding-bottom: unit($val, $pdUnit)
                        @each $val in map-get($pdArray, all)
                            &-#{$size}-#{$val}
                                padding: unit($val, $pdUnit)
        @else 
            @each $val in $pdArray
                &l-#{$val}
                    padding-left: unit($val, $pdUnit)
                &r-#{$val}
                    padding-right: unit($val, $pdUnit)
                &t-#{$val}
                    padding-top: unit($val, $pdUnit)
                &b-#{$val}
                    padding-bottom: unit($val, $pdUnit)
                &x-#{$val}
                    padding-left: unit($val, $pdUnit)
                    padding-right: unit($val, $pdUnit)
                &y-#{$val}
                    padding-top: unit($val, $pdUnit)
                    padding-bottom: unit($val, $pdUnit)
                &-#{$val}
                    padding: unit($val, $pdUnit)

            @each $size, $val in $pdSwitch
                @if $val == t
                    +rwdw-min($size)
                        @each $val in $pdArray
                            &l-#{$size}-#{$val}
                                padding-left: unit($val, $pdUnit)
                            &r-#{$size}-#{$val}
                                padding-right: unit($val, $pdUnit)
                            &t-#{$size}-#{$val}
                                padding-top: unit($val, $pdUnit)
                            &b-#{$size}-#{$val}
                                padding-bottom: unit($val, $pdUnit)
                            &x-#{$size}-#{$val}
                                padding-left: unit($val, $pdUnit)
                                padding-right: unit($val, $pdUnit)
                            &y-#{$size}-#{$val}
                                padding-top: unit($val, $pdUnit)
                                padding-bottom: unit($val, $pdUnit)
                            &-#{$size}-#{$val}
                                padding: unit($val, $pdUnit)

@mixin u-other()
    .u-t-hide
        position: absolute
        clip: rect(1px, 1px, 1px, 1px)
        -webkit-clip-path: inset(0px 0px 99.9% 99.9%)
        clip-path: inset(0px 0px 99.9% 99.9%)
        overflow: hidden
        height: 1px
        width: 1px
        padding: 0
        border: 0

    .u-yt
        position: relative
        max-width: 960px
        width: 100%
        +mg(x, auto)
        &::before
            content: ''
            display: block
            +pa-h(540, 960)
        iframe
            position: absolute
            top: 0px
            left: 0px
            width: 100%
            height: 100%

    .u-googlemap
        position: relative
        &::before
            content: ''
            display: block
            width: 100%
            +pa-h(240, 700)
        iframe
            position: absolute
            top: 0px
            left: 0px
            width: 100%
            height: 100%