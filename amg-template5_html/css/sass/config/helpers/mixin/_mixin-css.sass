// Display Flex
@mixin flex($dis: flex, $fd: default, $fw: default, $ai: default, $jc: default)
    display: $dis

    @if $fd != default
        @if $fd == row 
            flex-direction: row 
        @else if $fd == rowr
            flex-direction: row-reverse
        @else if $fd == col
            flex-direction: column
        @else if $fd == colr
            flex-direction: column-reverse
        @else
            flex-direction: $fd

    @if $fw != default
        @if $fw == wp 
            flex-wrap: wrap 
        @else if $fw == wpr
            flex-wrap: wrap-reverse
        @else if $fw == nwp
            flex-wrap: nowrap
        @else
            flex-wrap: $fw

    @if $ai != default
        @if $ai == start
            align-items: flex-start
        @else if $ai == end
            align-items: flex-end
        @else
            align-items: $ai

    @if $jc != default
        @if $jc == sa
            justify-content: space-around
        @else if $jc == sb
            justify-content: space-between
        @else if $jc == start
            justify-content: flex-start
        @else if $jc == end
            justify-content: flex-end
        @else
            justify-content: $jc

// Flex 置中
@mixin flex-center($dis: flex, $fd: default, $fw: default, $ai: center, $jc: center)
    display: $dis

    @if $ai != center
        @if $ai == start
            align-items: flex-start
        @else if $ai == end
            align-items: flex-end
        @else
            align-items: $ai
    @else
            align-items: $ai

    @if $jc != center
        @if $jc == sa
            justify-content: space-around
        @else if $jc == sb
            justify-content: space-between
        @else if $jc == start
            justify-content: flex-start
        @else if $jc == end
            justify-content: flex-end
        @else
            justify-content: $jc
    @else
        justify-content: $jc

    @if $fd != default
        @if $fd == row 
            flex-direction: row 
        @else if $fd == rowr
            flex-direction: row-reverse
        @else if $fd == col
            flex-direction: column
        @else if $fd == colr
            flex-direction: column-reverse
        @else
            flex-direction: $fd

    @if $fw != default
        @if $fw == wp 
            flex-wrap: wrap 
        @else if $fw == wpr
            flex-wrap: wrap-reverse
        @else if $fw == nwp
            flex-wrap: nowrap
        @else
            flex-wrap: $fw

// Flex Layout
@mixin fl-item($val, $init: null)
    max-width: $val
    @if $init == 0
        flex: 0 0 auto
        width: 100%
    @else if $init == 1
        flex: 0 1 auto
        width: 100%

// Text Linear Gradient 文字漸層
@mixin text-lg($L: red, $R: blue, $path: left)
    background: linear-gradient($path, $L, $R)
    background-clip: text
    color: transparent

// Border Linear Gradient 邊線漸層
@mixin border-lg($L: red, $R: blue, $path: left)
    border-style: solid
    border-image: linear-gradient($path, $L, $R)
    border-image-slice: 1

// Background linear gradient 背景漸層
@mixin bg-lg($L: red, $R: blue, $path: left)
    background: linear-gradient($path, $L, $R)

// Text Overflow
@mixin text-overflow($row: 1)
    overflow: hidden
    text-overflow: ellipsis
    @if $row == 1
        white-space: nowrap
    @else
        display: -webkit-box
        -webkit-box-orient: vertical
        -webkit-line-clamp: $row

// appearance
@mixin appearance($arrow) 
    -webkit-appearance: $arrow 
    /*Chrome*/
    -moz-appearance: $arrow 
    /*FF*/
    appearance: $arrow
    /*CSS3*/
    &:-ms-expand 
        display: $arrow 
    /*IE*/ 

// transition(trs)
@mixin transition($time: .5, $tag: all, $delay: 0, $fn: linear)
    transition: $tag $time + s
    @if $delay != 0
        transition-delay: $delay + s
    @if $fn != linear
        transition-timing-function: $fn
@mixin trs($time: .5, $tag: all, $delay: 0, $fn: linear)
    transition: $tag $time + s
    @if $delay != 0
        transition-delay: $delay + s
    @if $fn != linear
        transition-timing-function: $fn

// Padding
@mixin pd($direction,$val)
    @if $direction == x
        padding-left: $val
        padding-right: $val
    @else if $direction == y
        padding-top: $val
        padding-bottom: $val
    @else if $direction == l
        padding-left: $val
    @else if $direction == r
        padding-right: $val
    @else if $direction == t
        padding-top: $val
    @else if $direction == b
        padding-bottom: $val
    @else
        padding: $val

// Margin
@mixin mg($direction, $val)
    @if $direction == x
        margin-left: $val
        margin-right: $val
    @else if $direction == y
        margin-top: $val
        margin-bottom: $val
    @else if $direction == l
        margin-left: $val
    @else if $direction == r
        margin-right: $val
    @else if $direction == t
        margin-top: $val
    @else if $direction == b
        margin-bottom: $val
    @else
        margin: $val

// Hover
@mixin hover()
    &:hover
        +rwdw-min()
            @content
